{"version":3,"sources":["logo.svg","components/Header.js","components/SearchForm.js","components/ResultsTable.js","components/Response.js","components/Cover.js","components/Loader.js","components/Modal.js","api/musicBrainzAPI.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","alt","src","logo","Component","SearchForm","submit","this","props","onSubmit","type","placeholder","name","value","ResultsTable","result","className","Response","numRslt","artistName","titleName","albumName","click","idRecording","onClick","e","Cover","url","Loader","loader","Modal","genre","length","rating","urlList","cover","map","u","i","key","baserequest","sendSearch","selectValue","searchValue","offset","addResponse","request","XMLHttpRequest","open","addEventListener","readyState","DONE","status","response","JSON","parse","responseText","send","sendSearchCover","idRelease","addCover","App","ev","preventDefault","target","addSearch","addSelect","setState","clickSeeMore","state","responsesList","recordings","a","push","title","id","count","clickOnModal","document","body","classList","add","visualModal","addDetails","sendSearchDetails","responseDetail","artists","artist","releases","release","genres","minuts","Math","floor","seconds","join","idReleases","responseCover","coversList","images","small","clickOffModal","remove","seeMore","visuResult","makeSearch","nbResult","emptyResult","r","d","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7e1ea961.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0329795d.svg\";","import React, {Component} from 'react';\nimport logo from '../logo.svg';\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <header>\n                <img alt=\"logo\" src={logo}/>\n                <h1>My Music App</h1>\n            </header>  \n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass SearchForm extends Component {\n\n    render() {\n        const {submit} = this.props;\n        return (\n            <form onSubmit={submit}>\n                    <label >Votre recherche : </label>\n                    <input type=\"text\" placeholder=\"Votre recherche par Artiste, Album, Titre ou sans sÃ©lection\" name=\"addSearch\" />\n                    <select name=\"addSelect\">\n                        <option value=\"everything\">Tout</option>\n                        <option value=\"artist\">Artiste</option>\n                        <option value=\"release\">Album</option>\n                        <option value=\"recording\">Titre</option>\n                    </select>\n                    <input type=\"submit\" value=\"Rechercher\"/>\n            </form> \n        )\n    }\n}\n\nexport default SearchForm;","import React, {Component} from 'react';\n\nclass ResultsTable extends Component {\n\n    render() {\n        const {result} = this.props;\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Artiste</th>\n                        <th>Titre</th>\n                        <th>Album</th>\n                        <th className=\"thSeeMore\">Voir plus</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {result}\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default ResultsTable;","import React, {Component} from 'react';\n\nclass Response extends Component {\n\n    render() {\n        const {numRslt, artistName, titleName, albumName, click, idRecording} = this.props;\n        return (\n            <tr>\n                <th>{numRslt}</th>\n                <th>{artistName}</th>\n                <th>{titleName}</th>\n                <th>{albumName}</th>\n                <th><button onClick={(e)=>click(idRecording)}>+</button></th>\n            </tr>\n        )\n    }\n}\n\nexport default Response;","import React, {Component} from 'react';\n\nclass Cover extends Component {\n\n    render() {\n        const {url} = this.props;\n        return (\n            <div className=\"cover\">\n                <img alt=\"\" src={url}/>\n            </div>\n        )\n    }\n}\n\nexport default Cover;","import React, {Component} from 'react';\n\nclass Loader extends Component {\n\n    render() {\n        const {loader} = this.props;\n        return (\n            <div className={loader}>\n            </div>\n        )\n    }\n}\n\nexport default Loader;","import React, {Component} from 'react';\nimport Cover from './Cover';\nimport Loader from './Loader';\n\nclass Modal extends Component {\n\n    render() {\n        const {click, titleName, artistName, albumName, genre, length, rating, urlList, cover, loader} = this.props;\n        return (\n            <aside className=\"modal\">\n                <div className=\"modal-wrapper\">\n                    <button onClick={click} className=\"modal-close\" value=\"Fermer la modal\">X</button>\n                    <h1>Informations</h1>\n                    <p><b>Titre :</b> {titleName}</p>\n                    <p><b>Artiste(s) :</b> {artistName}</p>\n                    <p><b>Album(s) :</b> {albumName}</p>\n                    <p><b>Genre(s) :</b> {genre}</p>\n                    <p><b>DurÃ©e :</b> {length}</p>\n                    <p><b>Note :</b> {rating}</p>\n                    <p><b>Covers</b> : </p>\n                    <Loader loader={loader}/>\n                    <div className=\"coverContent\">\n                        {urlList.map((u,i) => <Cover key={i} {...u}/>)}\n                    </div>\n                    {!cover && <p>Pas de cover disponible</p>}\n                </div>\n            </aside>  \n        )\n    }\n}\n\nexport default Modal;","const baserequest = 'https://musicbrainz.org/ws/2/recording';\n\nfunction sendSearch(selectValue, searchValue, offset, addResponse){\n    const request = new XMLHttpRequest();\n    if(selectValue === \"everything\"){\n        request.open(\"GET\", baserequest + '?query=\"' + searchValue +'\"&fmt=json&limit=100&offset=' + offset, true);\n    }else{\n        request.open(\"GET\", baserequest + '?query=' + selectValue + ':\"' + searchValue +'\"&fmt=json&limit=100&offset=' + offset, true);\n    }\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const response = JSON.parse(request.responseText);\n            addResponse(response);\n        }\n    });\n    request.send();\n}\n\nfunction sendSearchDetails(idRecording, addDetails){\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", baserequest + '/' + idRecording + '?inc=ratings+genres+releases+artists&fmt=json', true);\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const response = JSON.parse(request.responseText);\n            addDetails(response);\n        }\n    });\n    request.send();\n}\n\nfunction sendSearchCover(idRelease, addCover){\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", 'https://coverartarchive.org/release/' + idRelease, true);\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const response = JSON.parse(request.responseText);\n            addCover(response);\n        }else{\n            addCover(\"noCover\");\n        }\n    });\n    request.send();\n}\n\nexport {sendSearch, sendSearchDetails, sendSearchCover};\n","import React, {Component} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport SearchForm from './components/SearchForm';\nimport ResultsTable from './components/ResultsTable';\nimport Response from './components/Response';\nimport Modal from './components/Modal';\nimport {sendSearch} from './api/musicBrainzAPI'; \nimport {sendSearchDetails} from './api/musicBrainzAPI'; \nimport {sendSearchCover} from './api/musicBrainzAPI'; \n\n\nclass App extends Component {\n\n  constructor(props){\n      super(props);\n      this.state = {\n        \"responsesList\" : [],\n        \"addSearch\": \"\",\n        \"addSelect\": \"\",\n        'makeSearch' : true,\n        'nbResult': \"\",\n        'emptyResult': false,\n        'visuResult': false,\n        'seeMore': false,\n        'visualModal': false,\n        \"responseDetail\" : [],\n        \"coversList\" : [],\n        \"cover\" : \"\",\n        \"loader\" : \"\",\n      }\n      this.offset = 0;\n    };\n\n  submit = (ev) => {\n      ev.preventDefault();\n\n      const {addSearch, addSelect} = ev.target;\n\n      this.setState({\n          \"responsesList\": [],\n          \"addSearch\": addSearch.value,\n          \"addSelect\": addSelect.value,\n      })\n\n      this.offset = 0;\n\n      sendSearch(addSelect.value, addSearch.value, this.offset, this.addResponse);\n  };\n\n  clickSeeMore = () => {\n      const {addSearch, addSelect} = this.state;\n      this.offset += 100;\n      sendSearch(addSelect, addSearch, this.offset, this.addResponse);\n  };\n\n  addResponse = (response) => {\n      const {responsesList} = this.state;\n\n      response.recordings.map(a => \n          responsesList.push({\n              \"artistName\":a[\"artist-credit\"]?.[0].name,\n              \"titleName\": a?.title,\n              \"albumName\": a[\"releases\"]?.[0].title,\n              \"idRecording\": a?.id,\n      }));\n\n      this.setState({\n          \"responsesList\": responsesList,\n      })\n\n      //pour gÃ©rer l'apparition ou non du bouton \"voir plus\"\n      if(this.offset+100 < response.count){\n          this.setState({\n              \"seeMore\": true,\n          });\n      }else{\n          this.setState({\n              \"seeMore\": false,\n          }); \n      } \n\n      //pour gÃ©rer l'apparition ou non du tableau des rÃ©sultats ou d'un texte\n      if(response.count > 0){\n        this.setState({\n          \"visuResult\": true,\n          \"makeSearch\": false,\n          \"emptyResult\": false,\n          \"nbResult\" : response.count,\n        }); \n      }else{\n        this.setState({\n          \"visuResult\": false,\n          \"makeSearch\": false,\n          \"emptyResult\": true,\n        }); \n      }\n  };\n\n  clickOnModal = (idRecording) => {\n    document.body.classList.add(\"bodyModalOpen\");\n\n    const {visualModal} = this.state;\n    this.setState({\n      \"visualModal\": !visualModal,\n      \"loader\": \"loader\",\n    }); \n\n    sendSearchDetails(idRecording, this.addDetails);\n  };\n\n  addDetails = (response) => {\n    const {responseDetail} = this.state;\n\n    const artists = [];\n    for(let artist of response[\"artist-credit\"]){\n      artists.push(artist.name);\n    }\n    \n    const releases = [];\n    for(let release of response[\"releases\"]){\n      releases.push(release.title);\n    }\n\n    const genres = [];\n    for(let genre of response?.genres){\n      genres.push(genre.name);\n    }\n\n    let length = response?.length;\n    let minuts = Math.floor(length/1000/60);\n    let seconds = Math.floor((length/1000)%60);\n\n    responseDetail.push({\n        \"titleName\": response?.title,\n        \"artistName\": response[\"artist-credit\"]?.length === 0 ? \"Indisponible\" : artists.join(', '),\n        \"albumName\": response[\"releases\"].length === 0 ? \"Indisponible\" : releases.join(', '),\n        \"genre\": response?.genres.length === 0 ? \"Indisponible\" : genres.join(', '),\n        \"length\": minuts+'mn '+seconds+\"s\",\n        \"rating\": response[\"rating\"]?.value === null ? \"Indisponible\" : response[\"rating\"]?.value + \"/5\",\n      });\n\n      this.setState({\n          \"responseDetail\": responseDetail,\n      })\n\n      //rÃ©cupÃ©ration des id albums pour les covers\n      this.setState({\n        \"coversList\": [],\n        \"cover\": \"\",\n      })\n\n      const idReleases = [];\n      for(let release of response[\"releases\"]){\n        idReleases.push(release.id);\n      }\n\n      for(let idRelease of idReleases){\n        sendSearchCover(idRelease, this.addCover);\n      }\n  };\n\n  addCover = (responseCover) => {\n    if(responseCover === \"noCover\"){\n      this.setState({\n        \"cover\": false,\n        \"loader\": \"\",\n      })\n    }else{\n      const {coversList} = this.state;\n      for(let cover of responseCover.images){\n        coversList.push({\n          \"url\": cover['thumbnails'].small});\n      }\n\n      this.setState({\n        \"coversList\": coversList,\n        \"cover\": true,\n        \"loader\": \"\",\n      })\n    }\n  };\n\n  clickOffModal = () => {\n    document.body.classList.remove(\"bodyModalOpen\");\n\n    const {visualModal} = this.state;\n    this.setState({\n      \"visualModal\": !visualModal,\n      \"responseDetail\": [],\n    }); \n  };\n\n  render() {\n      const {responsesList, seeMore, visualModal, visuResult, makeSearch, nbResult, emptyResult, responseDetail, coversList, cover, loader} = this.state;\n      return (\n          <div>\n            <Header/>\n\n            <main>\n              <SearchForm submit={this.submit}/>\n\n              {makeSearch && <p className=\"search\">Veuillez effectuer une recherche</p>}\n\n              {visuResult && <p className=\"result\">{nbResult} rÃ©sultats</p>}\n                \n              {visuResult && <ResultsTable result={responsesList.map((r,i) => <Response key={i} {...r} numRslt={i+1} click={this.clickOnModal}/>)}/> }\n\n              {emptyResult && <p>Aucun rÃ©sultat pour votre recherche</p>}\n\n              {seeMore && <button className=\"btnSeeMore\" onClick={this.clickSeeMore}>Voir plus</button> }\n\n              {visualModal && responseDetail.map((d,i) => <Modal key={i} {...d} click={this.clickOffModal} urlList={coversList} cover={cover} loader={loader}/>)}\n            </main>\n\n          </div>\n      )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}