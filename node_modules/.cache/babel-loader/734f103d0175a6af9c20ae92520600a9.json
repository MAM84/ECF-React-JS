{"ast":null,"code":"var baserequest='https://musicbrainz.org/ws/2/recording';function sendSearch(selectValue,searchValue,offset,addResponse){var request=new XMLHttpRequest();if(selectValue===\"everything\"){request.open(\"GET\",baserequest+'?query=\"'+searchValue+'\"&fmt=json&limit=100&offset='+offset,true);}else{request.open(\"GET\",baserequest+'?query='+selectValue+':\"'+searchValue+'\"&fmt=json&limit=100&offset='+offset,true);}request.addEventListener(\"readystatechange\",function(){if(request.readyState===XMLHttpRequest.DONE&&request.status===200){var response=JSON.parse(request.responseText);addResponse(response);}});request.send();}function sendSearchDetails(idRecording,addDetails){var request=new XMLHttpRequest();request.open(\"GET\",baserequest+'/'+idRecording+'?inc=ratings+genres+releases+artists&fmt=json',true);request.addEventListener(\"readystatechange\",function(){if(request.readyState===XMLHttpRequest.DONE&&request.status===200){var response=JSON.parse(request.responseText);addDetails(response);}});request.send();}function sendSearchCover(idRelease,addCover){var request=new XMLHttpRequest();request.open(\"GET\",'https://coverartarchive.org/release/'+idRelease,true);request.addEventListener(\"readystatechange\",function(){if(request.readyState===XMLHttpRequest.DONE&&request.status===200){var response=JSON.parse(request.responseText);addCover(response);}else{addCover(\"noCover\");}});request.send();}export{sendSearch,sendSearchDetails,sendSearchCover};","map":{"version":3,"sources":["/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf deploiement/src/api/musicBrainzAPI.js"],"names":["baserequest","sendSearch","selectValue","searchValue","offset","addResponse","request","XMLHttpRequest","open","addEventListener","readyState","DONE","status","response","JSON","parse","responseText","send","sendSearchDetails","idRecording","addDetails","sendSearchCover","idRelease","addCover"],"mappings":"AAAA,GAAMA,CAAAA,WAAW,CAAG,wCAApB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,WAApB,CAAiCC,WAAjC,CAA8CC,MAA9C,CAAsDC,WAAtD,CAAkE,CAC9D,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,cAAJ,EAAhB,CACA,GAAGL,WAAW,GAAK,YAAnB,CAAgC,CAC5BI,OAAO,CAACE,IAAR,CAAa,KAAb,CAAoBR,WAAW,CAAG,UAAd,CAA2BG,WAA3B,CAAwC,8BAAxC,CAAyEC,MAA7F,CAAqG,IAArG,EACH,CAFD,IAEK,CACDE,OAAO,CAACE,IAAR,CAAa,KAAb,CAAoBR,WAAW,CAAG,SAAd,CAA0BE,WAA1B,CAAwC,IAAxC,CAA+CC,WAA/C,CAA4D,8BAA5D,CAA6FC,MAAjH,CAAyH,IAAzH,EACH,CACDE,OAAO,CAACG,gBAAR,CAAyB,kBAAzB,CAA4C,UAAU,CAClD,GAAGH,OAAO,CAACI,UAAR,GAAuBH,cAAc,CAACI,IAAtC,EAA8CL,OAAO,CAACM,MAAR,GAAmB,GAApE,CAAwE,CACpE,GAAMC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,YAAnB,CAAjB,CACAX,WAAW,CAACQ,QAAD,CAAX,CACH,CACJ,CALD,EAMAP,OAAO,CAACW,IAAR,GACH,CAED,QAASC,CAAAA,iBAAT,CAA2BC,WAA3B,CAAwCC,UAAxC,CAAmD,CAC/C,GAAMd,CAAAA,OAAO,CAAG,GAAIC,CAAAA,cAAJ,EAAhB,CACAD,OAAO,CAACE,IAAR,CAAa,KAAb,CAAoBR,WAAW,CAAG,GAAd,CAAoBmB,WAApB,CAAkC,+CAAtD,CAAuG,IAAvG,EACAb,OAAO,CAACG,gBAAR,CAAyB,kBAAzB,CAA4C,UAAU,CAClD,GAAGH,OAAO,CAACI,UAAR,GAAuBH,cAAc,CAACI,IAAtC,EAA8CL,OAAO,CAACM,MAAR,GAAmB,GAApE,CAAwE,CACpE,GAAMC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,YAAnB,CAAjB,CACAI,UAAU,CAACP,QAAD,CAAV,CACH,CACJ,CALD,EAMAP,OAAO,CAACW,IAAR,GACH,CAED,QAASI,CAAAA,eAAT,CAAyBC,SAAzB,CAAoCC,QAApC,CAA6C,CACzC,GAAMjB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,cAAJ,EAAhB,CACAD,OAAO,CAACE,IAAR,CAAa,KAAb,CAAoB,uCAAyCc,SAA7D,CAAwE,IAAxE,EACAhB,OAAO,CAACG,gBAAR,CAAyB,kBAAzB,CAA4C,UAAU,CAClD,GAAGH,OAAO,CAACI,UAAR,GAAuBH,cAAc,CAACI,IAAtC,EAA8CL,OAAO,CAACM,MAAR,GAAmB,GAApE,CAAwE,CACpE,GAAMC,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,YAAnB,CAAjB,CACAO,QAAQ,CAACV,QAAD,CAAR,CACH,CAHD,IAGK,CACDU,QAAQ,CAAC,SAAD,CAAR,CACH,CACJ,CAPD,EAQAjB,OAAO,CAACW,IAAR,GACH,CAED,OAAQhB,UAAR,CAAoBiB,iBAApB,CAAuCG,eAAvC","sourcesContent":["const baserequest = 'https://musicbrainz.org/ws/2/recording';\n\nfunction sendSearch(selectValue, searchValue, offset, addResponse){\n    const request = new XMLHttpRequest();\n    if(selectValue === \"everything\"){\n        request.open(\"GET\", baserequest + '?query=\"' + searchValue +'\"&fmt=json&limit=100&offset=' + offset, true);\n    }else{\n        request.open(\"GET\", baserequest + '?query=' + selectValue + ':\"' + searchValue +'\"&fmt=json&limit=100&offset=' + offset, true);\n    }\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const response = JSON.parse(request.responseText);\n            addResponse(response);\n        }\n    });\n    request.send();\n}\n\nfunction sendSearchDetails(idRecording, addDetails){\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", baserequest + '/' + idRecording + '?inc=ratings+genres+releases+artists&fmt=json', true);\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const response = JSON.parse(request.responseText);\n            addDetails(response);\n        }\n    });\n    request.send();\n}\n\nfunction sendSearchCover(idRelease, addCover){\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", 'https://coverartarchive.org/release/' + idRelease, true);\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const response = JSON.parse(request.responseText);\n            addCover(response);\n        }else{\n            addCover(\"noCover\");\n        }\n    });\n    request.send();\n}\n\nexport {sendSearch, sendSearchDetails, sendSearchCover};\n"]},"metadata":{},"sourceType":"module"}