{"ast":null,"code":"var _jsxFileName = \"/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport ResultsTable from './components/ResultsTable';\nimport Response from './components/Response';\nimport Modal from './components/Modal';\nimport { sendSearch } from './api/musicBrainzAPI';\nimport { sendSearchDetails } from './api/musicBrainzAPI';\nimport { sendSearchCover } from './api/musicBrainzAPI';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = ev => {\n      ev.preventDefault();\n      const {\n        addSearch,\n        addSelect\n      } = ev.target;\n      this.setState({\n        \"responsesList\": [],\n        \"addSearch\": addSearch.value,\n        \"addSelect\": addSelect.value\n      });\n      this.offset = 0;\n      sendSearch(addSelect.value, addSearch.value, this.offset, this.addResponse);\n    };\n\n    this.clickSeeMore = () => {\n      const {\n        addSearch,\n        addSelect\n      } = this.state;\n      this.offset += 100;\n      sendSearch(addSelect, addSearch, this.offset, this.addResponse);\n    };\n\n    this.addResponse = response => {\n      const {\n        responsesList\n      } = this.state;\n      response.recordings.map(a => {\n        var _a$artistCredit, _a$releases;\n\n        return responsesList.push({\n          \"artistName\": (_a$artistCredit = a[\"artist-credit\"]) === null || _a$artistCredit === void 0 ? void 0 : _a$artistCredit[0].name,\n          \"titleName\": a === null || a === void 0 ? void 0 : a.title,\n          \"albumName\": (_a$releases = a[\"releases\"]) === null || _a$releases === void 0 ? void 0 : _a$releases[0].title,\n          \"idRecording\": a === null || a === void 0 ? void 0 : a.id\n        });\n      });\n      this.setState({\n        \"responsesList\": responsesList\n      }); //pour gérer l'apparission ou non du bouton \"voir plus\"\n\n      if (this.offset + 100 < response.count) {\n        this.setState({\n          \"seeMore\": true\n        });\n      } else {\n        this.setState({\n          \"seeMore\": false\n        });\n      } //pour gérer l'apparission ou non du tableau des résultats ou d'un texte\n\n\n      if (response.count > 0) {\n        this.setState({\n          \"visuResult\": true,\n          \"makeSearch\": false,\n          \"emptyResult\": false,\n          \"nbResult\": response.count\n        });\n      } else {\n        this.setState({\n          \"visuResult\": false,\n          \"makeSearch\": false,\n          \"emptyResult\": true\n        });\n      }\n    };\n\n    this.clickOnModal = idRecording => {\n      const {\n        visualModal\n      } = this.state;\n      this.setState({\n        \"visualModal\": !visualModal\n      });\n      sendSearchDetails(idRecording, this.addDetails);\n    };\n\n    this.addDetails = response => {\n      var _response$artistCred, _response$rating, _response$rating2;\n\n      const {\n        responseDetail\n      } = this.state;\n      const artists = [];\n\n      for (let artist of response[\"artist-credit\"]) {\n        artists.push(artist.name);\n      }\n\n      const releases = [];\n\n      for (let release of response[\"releases\"]) {\n        releases.push(release.title);\n      }\n\n      const genres = [];\n\n      for (let genre of response === null || response === void 0 ? void 0 : response.genres) {\n        genres.push(genre.name);\n      }\n\n      let length = response === null || response === void 0 ? void 0 : response.length;\n      let minuts = Math.floor(length / 1000 / 60);\n      let seconds = Math.floor(length / 1000 % 60);\n      responseDetail.push({\n        \"titleName\": response === null || response === void 0 ? void 0 : response.title,\n        \"artistName\": ((_response$artistCred = response[\"artist-credit\"]) === null || _response$artistCred === void 0 ? void 0 : _response$artistCred.length) === 0 ? \"Indisponible\" : artists.join(', '),\n        \"albumName\": response[\"releases\"].length === 0 ? \"Indisponible\" : releases.join(', '),\n        \"genre\": (response === null || response === void 0 ? void 0 : response.genres.length) === 0 ? \"Indisponible\" : genres.join(', '),\n        \"length\": minuts + 'mn ' + seconds + \"s\",\n        \"rating\": ((_response$rating = response[\"rating\"]) === null || _response$rating === void 0 ? void 0 : _response$rating.value) === null ? \"Indisponible\" : ((_response$rating2 = response[\"rating\"]) === null || _response$rating2 === void 0 ? void 0 : _response$rating2.value) + \"/5\"\n      });\n      this.setState({\n        \"responseDetail\": responseDetail\n      }); //récupération des id albums pour les covers\n\n      this.setState({\n        \"coversList\": [],\n        \"cover\": \"\"\n      });\n      const idReleases = [];\n\n      for (let release of response[\"releases\"]) {\n        idReleases.push(release.id);\n      }\n\n      for (let idRelease of idReleases) {\n        sendSearchCover(idRelease, this.addCover);\n      }\n    };\n\n    this.addCover = responseCover => {\n      const {\n        coversList\n      } = this.state;\n\n      for (let cover of responseCover.images) {\n        coversList.push({\n          \"url\": cover['thumbnails'].small\n        });\n      }\n\n      this.setState({\n        \"coversList\": coversList\n      }); //pour gérer l'affichage d'un texte s'il n'y a pas de cover\n\n      if (coversList.length > 0) {\n        this.setState({\n          \"cover\": true\n        });\n      } else {\n        this.setState({\n          \"cover\": false\n        });\n      }\n    };\n\n    this.clickOffModal = () => {\n      const {\n        visualModal\n      } = this.state;\n      this.setState({\n        \"visualModal\": !visualModal\n      });\n    };\n\n    this.state = {\n      \"responsesList\": [],\n      \"addSearch\": \"\",\n      \"addSelect\": \"\",\n      'makeSearch': true,\n      'nbResult': \"\",\n      'emptyResult': false,\n      'visuResult': false,\n      'seeMore': false,\n      'visualModal': true,\n      \"responseDetail\": [],\n      \"coversList\": [],\n      \"cover\": \"\"\n    };\n    this.offset = 0;\n  }\n\n  render() {\n    const {\n      responsesList,\n      seeMore,\n      visualModal,\n      visuResult,\n      makeSearch,\n      nbResult,\n      emptyResult,\n      responseDetail,\n      coversList,\n      cover\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchForm, {\n      submit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 14\n      }\n    }), makeSearch && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 30\n      }\n    }, \"Veuillez effectuer une recherche\"), visuResult && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 30\n      }\n    }, nbResult, \" r\\xE9sultats\"), visuResult && /*#__PURE__*/React.createElement(ResultsTable, {\n      result: responsesList.map((r, i) => /*#__PURE__*/React.createElement(Response, Object.assign({\n        key: i\n      }, r, {\n        numRslt: i + 1,\n        click: this.clickOnModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 79\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 30\n      }\n    }), emptyResult && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 31\n      }\n    }, \"Aucun r\\xE9sultat pour votre recherche\"), seeMore && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clickSeeMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 27\n      }\n    }, \"Voir plus\"), responseDetail.map((d, i) => /*#__PURE__*/React.createElement(Modal, Object.assign({\n      key: i\n    }, d, {\n      visual: visualModal,\n      click: this.clickOffModal,\n      urlList: coversList,\n      cover: cover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 44\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf/src/App.js"],"names":["React","Component","SearchForm","ResultsTable","Response","Modal","sendSearch","sendSearchDetails","sendSearchCover","App","constructor","props","submit","ev","preventDefault","addSearch","addSelect","target","setState","value","offset","addResponse","clickSeeMore","state","response","responsesList","recordings","map","a","push","name","title","id","count","clickOnModal","idRecording","visualModal","addDetails","responseDetail","artists","artist","releases","release","genres","genre","length","minuts","Math","floor","seconds","join","idReleases","idRelease","addCover","responseCover","coversList","cover","images","small","clickOffModal","render","seeMore","visuResult","makeSearch","nbResult","emptyResult","r","i","d"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport ResultsTable from './components/ResultsTable';\nimport Response from './components/Response';\nimport Modal from './components/Modal';\nimport {sendSearch} from './api/musicBrainzAPI'; \nimport {sendSearchDetails} from './api/musicBrainzAPI'; \nimport {sendSearchCover} from './api/musicBrainzAPI'; \n\n\nclass App extends Component {\n\n  constructor(props){\n      super(props);\n      this.state = {\n        \"responsesList\" : [],\n        \"addSearch\": \"\",\n        \"addSelect\": \"\",\n        'makeSearch' : true,\n        'nbResult': \"\",\n        'emptyResult': false,\n        'visuResult': false,\n        'seeMore': false,\n        'visualModal': true,\n        \"responseDetail\" : [],\n        \"coversList\" : [],\n        \"cover\" : \"\",\n      }\n      this.offset = 0;\n    };\n\n  submit = (ev) => {\n      ev.preventDefault();\n\n      const {addSearch, addSelect} = ev.target;\n\n      this.setState({\n          \"responsesList\": [],\n          \"addSearch\": addSearch.value,\n          \"addSelect\": addSelect.value,\n      })\n\n      this.offset = 0;\n\n      sendSearch(addSelect.value, addSearch.value, this.offset, this.addResponse);\n  };\n\n  clickSeeMore = () => {\n      const {addSearch, addSelect} = this.state;\n      this.offset += 100;\n      sendSearch(addSelect, addSearch, this.offset, this.addResponse);\n  };\n\n  addResponse = (response) => {\n      const {responsesList} = this.state;\n\n      response.recordings.map(a => \n          responsesList.push({\n              \"artistName\":a[\"artist-credit\"]?.[0].name,\n              \"titleName\": a?.title,\n              \"albumName\": a[\"releases\"]?.[0].title,\n              \"idRecording\": a?.id,\n      }));\n\n      this.setState({\n          \"responsesList\": responsesList,\n      })\n\n      //pour gérer l'apparission ou non du bouton \"voir plus\"\n      if(this.offset+100 < response.count){\n          this.setState({\n              \"seeMore\": true,\n          });\n      }else{\n          this.setState({\n              \"seeMore\": false,\n          }); \n      } \n\n      //pour gérer l'apparission ou non du tableau des résultats ou d'un texte\n      if(response.count > 0){\n        this.setState({\n          \"visuResult\": true,\n          \"makeSearch\": false,\n          \"emptyResult\": false,\n          \"nbResult\" : response.count,\n        }); \n      }else{\n        this.setState({\n          \"visuResult\": false,\n          \"makeSearch\": false,\n          \"emptyResult\": true,\n        }); \n      }\n  };\n\n  clickOnModal = (idRecording) => {\n    const {visualModal} = this.state;\n    this.setState({\n      \"visualModal\": !visualModal,\n    }); \n\n    sendSearchDetails(idRecording, this.addDetails);\n  };\n\n  addDetails = (response) => {\n    const {responseDetail} = this.state;\n\n    const artists = [];\n    for(let artist of response[\"artist-credit\"]){\n      artists.push(artist.name);\n    }\n    \n    const releases = [];\n    for(let release of response[\"releases\"]){\n      releases.push(release.title);\n    }\n\n    const genres = [];\n    for(let genre of response?.genres){\n      genres.push(genre.name);\n    }\n\n    let length = response?.length;\n    let minuts = Math.floor(length/1000/60);\n    let seconds = Math.floor((length/1000)%60);\n\n    responseDetail.push({\n        \"titleName\": response?.title,\n        \"artistName\": response[\"artist-credit\"]?.length === 0 ? \"Indisponible\" : artists.join(', '),\n        \"albumName\": response[\"releases\"].length === 0 ? \"Indisponible\" : releases.join(', '),\n        \"genre\": response?.genres.length === 0 ? \"Indisponible\" : genres.join(', '),\n        \"length\": minuts+'mn '+seconds+\"s\",\n        \"rating\": response[\"rating\"]?.value === null ? \"Indisponible\" : response[\"rating\"]?.value + \"/5\",\n      });\n\n      this.setState({\n          \"responseDetail\": responseDetail,\n      })\n\n      //récupération des id albums pour les covers\n      this.setState({\n        \"coversList\": [],\n        \"cover\": \"\",\n      })\n\n      const idReleases = [];\n      for(let release of response[\"releases\"]){\n        idReleases.push(release.id);\n      }\n\n      for(let idRelease of idReleases){\n        sendSearchCover(idRelease, this.addCover);\n      }\n  };\n\n  addCover = (responseCover) => {\n    const {coversList} = this.state;\n    for(let cover of responseCover.images){\n      coversList.push({\n        \"url\": cover['thumbnails'].small});\n    }\n\n    this.setState({\n      \"coversList\": coversList,\n    })\n\n    //pour gérer l'affichage d'un texte s'il n'y a pas de cover\n    if(coversList.length > 0){\n      this.setState({\n        \"cover\": true,\n      })\n    }else{\n      this.setState({\n        \"cover\": false,\n      })\n    }\n  };\n\n  clickOffModal = () => {\n    const {visualModal} = this.state;\n    this.setState({\n      \"visualModal\": !visualModal,\n    }); \n  };\n\n  render() {\n      const {responsesList, seeMore, visualModal, visuResult, makeSearch, nbResult, emptyResult, responseDetail, coversList, cover} = this.state;\n      return (\n          <div className=\"App\">\n             <SearchForm submit={this.submit}/>\n\n              {makeSearch && <p>Veuillez effectuer une recherche</p>}\n\n              {visuResult && <p>{nbResult} résultats</p>}\n              \n              {visuResult && <ResultsTable result={responsesList.map((r,i) => <Response key={i} {...r} numRslt={i+1} click={this.clickOnModal}/>)}/> }\n\n              {emptyResult && <p>Aucun résultat pour votre recherche</p>}\n\n              {seeMore && <button onClick={this.clickSeeMore}>Voir plus</button> }\n              \n              {responseDetail.map((d,i) => <Modal key={i} {...d} visual={visualModal} click={this.clickOffModal} urlList={coversList} cover={cover}/>)}\n          </div>\n      )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}