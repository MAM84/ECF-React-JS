{"ast":null,"code":"function sendSearchByArtist(searchValue, addResponseByArtist) {\n  const requestArtist = new XMLHttpRequest();\n  requestArtist.open(\"GET\", 'https://musicbrainz.org/ws/2/recording?query=artist:\"' + searchValue + '\"&fmt=json', true);\n  requestArtist.addEventListener(\"readystatechange\", function () {\n    if (requestArtist.readyState === XMLHttpRequest.DONE && requestArtist.status === 200) {\n      const responseArtist = JSON.parse(requestArtist.responseText); // addResponseByArtist(responseArtist);\n\n      console.log(responseArtist);\n    }\n  });\n  requestArtist.send();\n}\n\nfunction sendSearchByAlbum(searchValue, addResponseByAlbum) {\n  const requestAlbum = new XMLHttpRequest();\n  requestAlbum.open(\"GET\", 'https://musicbrainz.org/ws/2/recording?query=release:\"' + searchValue + '\"&fmt=json', true);\n  requestAlbum.addEventListener(\"readystatechange\", function () {\n    if (requestAlbum.readyState === XMLHttpRequest.DONE && requestAlbum.status === 200) {\n      const responseAlbum = JSON.parse(requestAlbum.responseText);\n      addResponseByAlbum(responseAlbum);\n    }\n  });\n  requestAlbum.send();\n}\n\nfunction sendSearchByTitle(searchValue, addResponseByTitle) {\n  const requestTitle = new XMLHttpRequest();\n  requestTitle.open(\"GET\", \"https://musicbrainz.org/ws/2/recording?query=\" + searchValue + \"&fmt=json\", true);\n  requestTitle.addEventListener(\"readystatechange\", function () {\n    if (requestTitle.readyState === XMLHttpRequest.DONE && requestTitle.status === 200) {\n      const responseTitle = JSON.parse(requestTitle.responseText);\n      addResponseByTitle(responseTitle);\n    }\n  });\n  requestTitle.send();\n}\n\nexport { sendSearchByArtist, sendSearchByAlbum, sendSearchByTitle };","map":{"version":3,"sources":["/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf/src/api/musicBrainzAPI.js"],"names":["sendSearchByArtist","searchValue","addResponseByArtist","requestArtist","XMLHttpRequest","open","addEventListener","readyState","DONE","status","responseArtist","JSON","parse","responseText","console","log","send","sendSearchByAlbum","addResponseByAlbum","requestAlbum","responseAlbum","sendSearchByTitle","addResponseByTitle","requestTitle","responseTitle"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,WAA5B,EAAyCC,mBAAzC,EAA6D;AACzD,QAAMC,aAAa,GAAG,IAAIC,cAAJ,EAAtB;AACAD,EAAAA,aAAa,CAACE,IAAd,CAAmB,KAAnB,EAA0B,0DAA0DJ,WAA1D,GAAuE,YAAjG,EAA+G,IAA/G;AACAE,EAAAA,aAAa,CAACG,gBAAd,CAA+B,kBAA/B,EAAkD,YAAU;AACxD,QAAGH,aAAa,CAACI,UAAd,KAA6BH,cAAc,CAACI,IAA5C,IAAoDL,aAAa,CAACM,MAAd,KAAyB,GAAhF,EAAoF;AAChF,YAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWT,aAAa,CAACU,YAAzB,CAAvB,CADgF,CAEhF;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACH;AACJ,GAND;AAOAP,EAAAA,aAAa,CAACa,IAAd;AACH;;AAED,SAASC,iBAAT,CAA2BhB,WAA3B,EAAwCiB,kBAAxC,EAA2D;AACvD,QAAMC,YAAY,GAAG,IAAIf,cAAJ,EAArB;AACAe,EAAAA,YAAY,CAACd,IAAb,CAAkB,KAAlB,EAAyB,2DAA2DJ,WAA3D,GAAwE,YAAjG,EAA+G,IAA/G;AACAkB,EAAAA,YAAY,CAACb,gBAAb,CAA8B,kBAA9B,EAAiD,YAAU;AACvD,QAAGa,YAAY,CAACZ,UAAb,KAA4BH,cAAc,CAACI,IAA3C,IAAmDW,YAAY,CAACV,MAAb,KAAwB,GAA9E,EAAkF;AAC9E,YAAMW,aAAa,GAAGT,IAAI,CAACC,KAAL,CAAWO,YAAY,CAACN,YAAxB,CAAtB;AACAK,MAAAA,kBAAkB,CAACE,aAAD,CAAlB;AACH;AACJ,GALD;AAMAD,EAAAA,YAAY,CAACH,IAAb;AACH;;AAED,SAASK,iBAAT,CAA2BpB,WAA3B,EAAwCqB,kBAAxC,EAA2D;AACvD,QAAMC,YAAY,GAAG,IAAInB,cAAJ,EAArB;AACAmB,EAAAA,YAAY,CAAClB,IAAb,CAAkB,KAAlB,EAAyB,kDAAkDJ,WAAlD,GAAgE,WAAzF,EAAsG,IAAtG;AACAsB,EAAAA,YAAY,CAACjB,gBAAb,CAA8B,kBAA9B,EAAiD,YAAU;AACvD,QAAGiB,YAAY,CAAChB,UAAb,KAA4BH,cAAc,CAACI,IAA3C,IAAmDe,YAAY,CAACd,MAAb,KAAwB,GAA9E,EAAkF;AAC9E,YAAMe,aAAa,GAAGb,IAAI,CAACC,KAAL,CAAWW,YAAY,CAACV,YAAxB,CAAtB;AACAS,MAAAA,kBAAkB,CAACE,aAAD,CAAlB;AACH;AACJ,GALD;AAMAD,EAAAA,YAAY,CAACP,IAAb;AACH;;AAED,SAAQhB,kBAAR,EAA4BiB,iBAA5B,EAA+CI,iBAA/C","sourcesContent":["function sendSearchByArtist(searchValue, addResponseByArtist){\n    const requestArtist = new XMLHttpRequest();\n    requestArtist.open(\"GET\", 'https://musicbrainz.org/ws/2/recording?query=artist:\"' + searchValue +'\"&fmt=json', true);\n    requestArtist.addEventListener(\"readystatechange\",function(){\n        if(requestArtist.readyState === XMLHttpRequest.DONE && requestArtist.status === 200){\n            const responseArtist = JSON.parse(requestArtist.responseText);\n            // addResponseByArtist(responseArtist);\n            console.log(responseArtist);\n        }\n    });\n    requestArtist.send();\n}\n\nfunction sendSearchByAlbum(searchValue, addResponseByAlbum){\n    const requestAlbum = new XMLHttpRequest();\n    requestAlbum.open(\"GET\", 'https://musicbrainz.org/ws/2/recording?query=release:\"' + searchValue +'\"&fmt=json', true);\n    requestAlbum.addEventListener(\"readystatechange\",function(){\n        if(requestAlbum.readyState === XMLHttpRequest.DONE && requestAlbum.status === 200){\n            const responseAlbum = JSON.parse(requestAlbum.responseText);\n            addResponseByAlbum(responseAlbum);\n        }\n    });\n    requestAlbum.send();\n}\n\nfunction sendSearchByTitle(searchValue, addResponseByTitle){\n    const requestTitle = new XMLHttpRequest();\n    requestTitle.open(\"GET\", \"https://musicbrainz.org/ws/2/recording?query=\" + searchValue + \"&fmt=json\", true);\n    requestTitle.addEventListener(\"readystatechange\",function(){\n        if(requestTitle.readyState === XMLHttpRequest.DONE && requestTitle.status === 200){\n            const responseTitle = JSON.parse(requestTitle.responseText);\n            addResponseByTitle(responseTitle);\n        }\n    });\n    requestTitle.send();\n}\n\nexport {sendSearchByArtist, sendSearchByAlbum, sendSearchByTitle};\n"]},"metadata":{},"sourceType":"module"}