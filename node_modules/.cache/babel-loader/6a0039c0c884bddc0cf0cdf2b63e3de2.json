{"ast":null,"code":"function sendSearch(selectValue, searchValue, offset, addResponse) {\n  const request = new XMLHttpRequest();\n\n  if (selectValue === \"everything\") {\n    request.open(\"GET\", 'https://musicbrainz.org/ws/2/recording?query=\"' + searchValue + '\"&fmt=json&limit=100&offset=' + offset, true);\n  } else {\n    request.open(\"GET\", 'https://musicbrainz.org/ws/2/recording?query=' + selectValue + ':\"' + searchValue + '\"&fmt=json&limit=100&offset=' + offset, true);\n  }\n\n  request.addEventListener(\"readystatechange\", function () {\n    if (request.readyState === XMLHttpRequest.DONE && request.status === 200) {\n      const response = JSON.parse(request.responseText);\n      addResponse(response);\n    }\n  });\n  request.send();\n}\n\nfunction sendSearchDetails(idRecording, addDetails) {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", 'https://musicbrainz.org/ws/2/recording/' + idRecording + '?inc=ratings+genres+releases+artists&fmt=json', true);\n  request.addEventListener(\"readystatechange\", function () {\n    if (request.readyState === XMLHttpRequest.DONE && request.status === 200) {\n      const responseDetails = JSON.parse(request.responseText);\n      addDetails(responseDetails);\n    }\n  });\n  request.send();\n}\n\nfunction sendSearchCover(idRelease, addCover) {\n  const request = new XMLHttpRequest();\n  request.open(\"GET\", 'https://coverartarchive.org/release/' + idRelease, true);\n  request.addEventListener(\"readystatechange\", function () {\n    if (request.readyState === XMLHttpRequest.DONE && request.status === 200) {\n      const responseCover = JSON.parse(request.responseText);\n      addCover(responseCover);\n    }\n  });\n  request.send();\n}\n\nexport { sendSearch, sendSearchDetails, sendSearchCover };","map":{"version":3,"sources":["/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf/src/api/musicBrainzAPI.js"],"names":["sendSearch","selectValue","searchValue","offset","addResponse","request","XMLHttpRequest","open","addEventListener","readyState","DONE","status","response","JSON","parse","responseText","send","sendSearchDetails","idRecording","addDetails","responseDetails","sendSearchCover","idRelease","addCover","responseCover"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,WAApB,EAAiCC,WAAjC,EAA8CC,MAA9C,EAAsDC,WAAtD,EAAkE;AAC9D,QAAMC,OAAO,GAAG,IAAIC,cAAJ,EAAhB;;AACA,MAAGL,WAAW,KAAK,YAAnB,EAAgC;AAC5BI,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,mDAAmDL,WAAnD,GAAgE,8BAAhE,GAAiGC,MAArH,EAA6H,IAA7H;AACH,GAFD,MAEK;AACDE,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,kDAAkDN,WAAlD,GAAgE,IAAhE,GAAuEC,WAAvE,GAAoF,8BAApF,GAAqHC,MAAzI,EAAiJ,IAAjJ;AACH;;AACDE,EAAAA,OAAO,CAACG,gBAAR,CAAyB,kBAAzB,EAA4C,YAAU;AAClD,QAAGH,OAAO,CAACI,UAAR,KAAuBH,cAAc,CAACI,IAAtC,IAA8CL,OAAO,CAACM,MAAR,KAAmB,GAApE,EAAwE;AACpE,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,YAAnB,CAAjB;AACAX,MAAAA,WAAW,CAACQ,QAAD,CAAX;AACH;AACJ,GALD;AAMAP,EAAAA,OAAO,CAACW,IAAR;AACH;;AAED,SAASC,iBAAT,CAA2BC,WAA3B,EAAwCC,UAAxC,EAAmD;AAC/C,QAAMd,OAAO,GAAG,IAAIC,cAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,4CAA4CW,WAA5C,GAA0D,+CAA9E,EAA+H,IAA/H;AACAb,EAAAA,OAAO,CAACG,gBAAR,CAAyB,kBAAzB,EAA4C,YAAU;AAClD,QAAGH,OAAO,CAACI,UAAR,KAAuBH,cAAc,CAACI,IAAtC,IAA8CL,OAAO,CAACM,MAAR,KAAmB,GAApE,EAAwE;AACpE,YAAMS,eAAe,GAAGP,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,YAAnB,CAAxB;AACAI,MAAAA,UAAU,CAACC,eAAD,CAAV;AACH;AACJ,GALD;AAMAf,EAAAA,OAAO,CAACW,IAAR;AACH;;AAED,SAASK,eAAT,CAAyBC,SAAzB,EAAoCC,QAApC,EAA6C;AACzC,QAAMlB,OAAO,GAAG,IAAIC,cAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,yCAAyCe,SAA7D,EAAwE,IAAxE;AACAjB,EAAAA,OAAO,CAACG,gBAAR,CAAyB,kBAAzB,EAA4C,YAAU;AAClD,QAAGH,OAAO,CAACI,UAAR,KAAuBH,cAAc,CAACI,IAAtC,IAA8CL,OAAO,CAACM,MAAR,KAAmB,GAApE,EAAwE;AACpE,YAAMa,aAAa,GAAGX,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACU,YAAnB,CAAtB;AACAQ,MAAAA,QAAQ,CAACC,aAAD,CAAR;AACH;AACJ,GALD;AAMAnB,EAAAA,OAAO,CAACW,IAAR;AACH;;AAED,SAAQhB,UAAR,EAAoBiB,iBAApB,EAAuCI,eAAvC","sourcesContent":["function sendSearch(selectValue, searchValue, offset, addResponse){\n    const request = new XMLHttpRequest();\n    if(selectValue === \"everything\"){\n        request.open(\"GET\", 'https://musicbrainz.org/ws/2/recording?query=\"' + searchValue +'\"&fmt=json&limit=100&offset=' + offset, true);\n    }else{\n        request.open(\"GET\", 'https://musicbrainz.org/ws/2/recording?query=' + selectValue + ':\"' + searchValue +'\"&fmt=json&limit=100&offset=' + offset, true);\n    }\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const response = JSON.parse(request.responseText);\n            addResponse(response);\n        }\n    });\n    request.send();\n}\n\nfunction sendSearchDetails(idRecording, addDetails){\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", 'https://musicbrainz.org/ws/2/recording/' + idRecording + '?inc=ratings+genres+releases+artists&fmt=json', true);\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const responseDetails = JSON.parse(request.responseText);\n            addDetails(responseDetails);\n        }\n    });\n    request.send();\n}\n\nfunction sendSearchCover(idRelease, addCover){\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", 'https://coverartarchive.org/release/' + idRelease, true);\n    request.addEventListener(\"readystatechange\",function(){\n        if(request.readyState === XMLHttpRequest.DONE && request.status === 200){\n            const responseCover = JSON.parse(request.responseText);\n            addCover(responseCover);\n        }\n    });\n    request.send();\n}\n\nexport {sendSearch, sendSearchDetails, sendSearchCover};\n"]},"metadata":{},"sourceType":"module"}