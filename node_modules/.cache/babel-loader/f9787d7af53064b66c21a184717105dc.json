{"ast":null,"code":"var _jsxFileName = \"/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf/src/components/SearchForm.js\";\nimport React, { Component } from 'react';\nimport { sendSearchByArtist } from '../api/musicBrainzAPI';\nimport { sendSearchByAlbum } from '../api/musicBrainzAPI';\nimport { sendSearchByTitle } from '../api/musicBrainzAPI';\nimport { sendSearch } from '../api/musicBrainzAPI';\nimport Response from './Response';\nimport ResultsTable from './ResultsTable';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = ev => {\n      ev.preventDefault();\n      const {\n        addSearch,\n        addSelect\n      } = ev.target;\n      sendSearch(addSelect.value, addSearch.value, this.addResponseByArtist); // if(addSelect.value === \"artist\"){\n      //     sendSearchByArtist(addSelect.value, addSearch.value,this.addResponseByArtist);\n      // }else if(addSelect.value === \"release\"){\n      //     sendSearchByAlbum(addSelect.value, addSearch.value,this.addResponseByAlbum);\n      // }else if(addSelect.value === \"recording\"){\n      //     sendSearchByTitle(addSelect.value, addSearch.value, this.addResponseByTitle);\n      // }else {\n      //     //pour everything\n      // }\n    };\n\n    this.addResponseByArtist = artists => {\n      const {\n        responsesList\n      } = this.state;\n      artists.recordings.map(a => responsesList.push({\n        \"artistName\": a[\"artist-credit\"][0].name,\n        \"titleName\": a.title,\n        \"albumName\": a[\"releases\"][0].title\n      }));\n      this.setState({\n        \"responsesList\": responsesList\n      });\n    };\n\n    this.addResponseByAlbum = albums => {\n      const {\n        responsesList\n      } = this.state;\n      albums.releases.map(a => responsesList.push({\n        \"albumName\": a.title\n      }));\n      this.setState({\n        \"responsesList\": responsesList\n      });\n    };\n\n    this.addResponseByTitle = titles => {\n      const {\n        responsesList\n      } = this.state;\n      titles.recordings.map(a => responsesList.push({\n        \"artistName\": a[\"artist-credit\"][0].name,\n        \"titleName\": a.title,\n        \"albumName\": a[\"releases\"][0].title\n      }));\n      this.setState({\n        \"responsesList\": responsesList\n      });\n    };\n\n    this.state = {\n      \"responsesList\": []\n    };\n  }\n\n  render() {\n    const {\n      responsesList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Votre recherche : \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Votre recherche par Artiste, Album, Titre ou dans tout\",\n      name: \"addSearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"addSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"everything\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Tout\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"artist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"Artiste\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"release\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Album\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"recording\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Titre\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Rechercher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(ResultsTable, {\n      result: responsesList.map((r, i) => /*#__PURE__*/React.createElement(Response, Object.assign({\n        key: i\n      }, r, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 66\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf/src/components/SearchForm.js"],"names":["React","Component","sendSearchByArtist","sendSearchByAlbum","sendSearchByTitle","sendSearch","Response","ResultsTable","SearchForm","constructor","props","submit","ev","preventDefault","addSearch","addSelect","target","value","addResponseByArtist","artists","responsesList","state","recordings","map","a","push","name","title","setState","addResponseByAlbum","albums","releases","addResponseByTitle","titles","render","r","i"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {sendSearchByArtist} from '../api/musicBrainzAPI'; \nimport {sendSearchByAlbum} from '../api/musicBrainzAPI'; \nimport {sendSearchByTitle} from '../api/musicBrainzAPI'; \nimport {sendSearch} from '../api/musicBrainzAPI'; \nimport Response from './Response';\nimport ResultsTable from './ResultsTable';\n\nclass SearchForm extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          \"responsesList\" : [],\n        }\n      };\n\n    submit = (ev) => {\n        ev.preventDefault();\n        const {addSearch, addSelect} = ev.target;\n        sendSearch(addSelect.value, addSearch.value,this.addResponseByArtist);\n        // if(addSelect.value === \"artist\"){\n        //     sendSearchByArtist(addSelect.value, addSearch.value,this.addResponseByArtist);\n        // }else if(addSelect.value === \"release\"){\n        //     sendSearchByAlbum(addSelect.value, addSearch.value,this.addResponseByAlbum);\n        // }else if(addSelect.value === \"recording\"){\n        //     sendSearchByTitle(addSelect.value, addSearch.value, this.addResponseByTitle);\n        // }else {\n        //     //pour everything\n        // }\n\n    };\n\n    addResponseByArtist = (artists) => {\n        const {responsesList} = this.state;\n\n        artists.recordings.map(a => \n            responsesList.push({\n                \"artistName\":a[\"artist-credit\"][0].name,\n                \"titleName\": a.title,\n                \"albumName\": a[\"releases\"][0].title,\n        }));\n\n        this.setState({\n            \"responsesList\": responsesList,\n        })\n    };\n\n    addResponseByAlbum = (albums) => {\n        const {responsesList} = this.state;\n\n        albums.releases.map(a => \n            responsesList.push({\n                \"albumName\": a.title,\n        }));\n\n        this.setState({\n            \"responsesList\": responsesList,\n        })\n    };\n\n    addResponseByTitle = (titles) => {\n        const {responsesList} = this.state;\n\n        titles.recordings.map(a => \n            responsesList.push({\n                \"artistName\":a[\"artist-credit\"][0].name,\n                \"titleName\": a.title,\n                \"albumName\": a[\"releases\"][0].title,\n        }));\n\n        this.setState({\n            \"responsesList\": responsesList,\n        })\n    };\n\n    render() {\n        const {responsesList} = this.state;\n        return (\n            <div>\n                <form onSubmit={this.submit}>\n                        <label >Votre recherche : </label>\n                        <input type=\"text\" placeholder=\"Votre recherche par Artiste, Album, Titre ou dans tout\" name=\"addSearch\" />\n                        <select name=\"addSelect\">\n                            <option value=\"everything\">Tout</option>\n                            <option value=\"artist\">Artiste</option>\n                            <option value=\"release\">Album</option>\n                            <option value=\"recording\">Titre</option>\n                        </select>\n                        <input type=\"submit\" value=\"Rechercher\"/>\n                </form>\n                \n                <ResultsTable result={responsesList.map((r,i) => <Response key={i} {...r} />)}/>  \n            </div>\n        )\n    }\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}