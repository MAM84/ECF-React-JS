{"ast":null,"code":"var _jsxFileName = \"/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf/src/components/SearchForm.js\";\nimport React, { Component } from 'react';\nimport { sendSearch } from '../api/musicBrainzAPI';\nimport Response from './Response';\nimport ResultsTable from './ResultsTable';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = ev => {\n      ev.preventDefault();\n      const {\n        responsesList\n      } = this.state;\n      this.setState({\n        \"responsesList\": []\n      });\n      const {\n        addSearch,\n        addSelect\n      } = ev.target;\n      sendSearch(addSelect.value, addSearch.value, this.addResponse);\n    };\n\n    this.addResponse = response => {\n      const {\n        responsesList\n      } = this.state;\n      response.recordings.map((a, i) => responsesList.push({\n        \"id\": i + 1,\n        \"artistName\": a[\"artist-credit\"][0].name,\n        \"titleName\": a.title,\n        \"albumName\": a[\"releases\"][0].title\n      }));\n      this.setState({\n        \"responsesList\": responsesList\n      });\n    };\n\n    this.state = {\n      \"responsesList\": []\n    };\n  }\n\n  render() {\n    const {\n      responsesList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"Votre recherche : \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Votre recherche par Artiste, Album, Titre ou dans tout\",\n      name: \"addSearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"addSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"everything\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"Tout\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"artist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Artiste\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"release\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Album\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"recording\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, \"Titre\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Rechercher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(ResultsTable, {\n      result: responsesList.map((r, i) => /*#__PURE__*/React.createElement(Response, Object.assign({\n        key: i\n      }, r, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 66\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/marionmetais/Documents/Exercices/React JS/Projets/ecf/src/components/SearchForm.js"],"names":["React","Component","sendSearch","Response","ResultsTable","SearchForm","constructor","props","submit","ev","preventDefault","responsesList","state","setState","addSearch","addSelect","target","value","addResponse","response","recordings","map","a","i","push","name","title","render","r"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {sendSearch} from '../api/musicBrainzAPI'; \nimport Response from './Response';\nimport ResultsTable from './ResultsTable';\n\nclass SearchForm extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          \"responsesList\" : [],\n        }\n      };\n\n    submit = (ev) => {\n        ev.preventDefault();\n        const {responsesList} = this.state;\n        this.setState({\n            \"responsesList\": [],\n        })\n        const {addSearch, addSelect} = ev.target;\n        sendSearch(addSelect.value, addSearch.value,this.addResponse);\n    };\n\n    addResponse = (response) => {\n        const {responsesList} = this.state;\n\n        response.recordings.map((a,i) => \n            responsesList.push({\n                \"id\": i+1,\n                \"artistName\":a[\"artist-credit\"][0].name,\n                \"titleName\": a.title,\n                \"albumName\": a[\"releases\"][0].title,\n        }));\n\n        this.setState({\n            \"responsesList\": responsesList,\n        })\n    };\n\n\n    render() {\n        const {responsesList} = this.state;\n        return (\n            <div>\n                <form onSubmit={this.submit}>\n                        <label >Votre recherche : </label>\n                        <input type=\"text\" placeholder=\"Votre recherche par Artiste, Album, Titre ou dans tout\" name=\"addSearch\" />\n                        <select name=\"addSelect\">\n                            <option value=\"everything\">Tout</option>\n                            <option value=\"artist\">Artiste</option>\n                            <option value=\"release\">Album</option>\n                            <option value=\"recording\">Titre</option>\n                        </select>\n                        <input type=\"submit\" value=\"Rechercher\"/>\n                </form>\n                \n                <ResultsTable result={responsesList.map((r,i) => <Response key={i} {...r} />)}/>  \n            </div>\n        )\n    }\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}